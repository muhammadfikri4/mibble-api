// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String
  password  String
  role      Role?     @default(USER)
  Thread    Thread[]
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  Comment   Comment[]
  Like      Like[]
}

model Thread {
  id      String    @id @default(uuid())
  thread  String
  userId  String    @map("user_id")
  user    User      @relation(fields: [userId], references: [id])
  Comment Comment[]
  Like    Like[]
}

model Comment {
  id       Int    @id @default(autoincrement())
  comment  String
  userId   String @map("user_id")
  threadId String @map("thread_id")
  user     User   @relation(fields: [userId], references: [id])
  thread   Thread @relation(fields: [threadId], references: [id])
}

model Like {
  id       Int    @id @default(autoincrement())
  userId   String @map("user_id")
  threadId String @map("thread_id")
  user     User   @relation(fields: [userId], references: [id])
  thread   Thread @relation(fields: [threadId], references: [id])
}

enum Role {
  ADMIN
  USER
}
